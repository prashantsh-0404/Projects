
#!/bin/zsh

# Add commonly used folders to $PATH
 export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/shishop/.local/bin:/usr/local/Cellar:$PATH"
export PATH=/usr/local/bin:$PATH
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"

# Specify default editor. Possible values: vim, nano, ed etc.
# export EDITOR=vim
 export EDITOR="code -w"
 code () { VSCODE_CWD="$PWD" open -n -b "com.microsoft.VSCode" --args $* ;}

# File search functions
 function f() { find . -iname "*$1*" ${@:2} }
 function r() { grep "$1" ${@:2} -R . }

# Create a folder and move into it in one command
 function mkcd() { mkdir -p "$@" && cd "$_"; }
 
# Example aliases
 alias cppcompile='c++ -std=c++11 -stdlib=libc++'


#------------------------------------
 #   OH-MY-ZSH INSTALLATION & PATH
#------------------------------------

 export ZSH=/Users/shishop/.oh-my-zsh
 ZSH_DISABLE_COMPFIX=true
 plugins=(git colored-man-pages colorize  pip python brew osx)
 # plugins = (git zsh-apple-touchbar zsh-syntax-highlighting zsh-autosuggestions zsh-history-substring-search)
ZSH_THEME="pygmalion"
#ZSH_THEME="nebirhos"
 
#ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#ff00ff,bg=cyan,bold,underline"
#ZSH_AUTOSUGGEST_STRATEGY=(history completion)
#ZSH_AUTOSUGGEST_COMPLETION_IGNORE="git *"
#ZSH_AUTOSUGGEST_HISTORY_IGNORE="cd *"
 
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

#------------------------------------



# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#ZSH_THEME="agnoster"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
# plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# If you come from bash you might have to change your $PATH.
 export PATH=$HOME/bin:/usr/local/bin:$PATH

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
##################
#------------------
#$$$$$$$$$$$$$$$$$$
#------------------





#--------------
#   ALIASES
#--------------

 alias zrc="vim ~/.zshrc"
 alias omzrc="vim ~/.oh-my-zsh"
 alias szrc="source ~/.zshrc"
 alias mkcd='foo(){ mkdir -p "$1"; cd "$1" }; foo '
 alias bru='brew update && brew upgrade'
 alias bri="brew install"
 alias l='ls -AF'
 alias ll='ls -la'
 alias rable='ls -AFtrd *(R)' nrable='ls -AFtrd *(^R)'
 alias py3=python3
 alias myip="curl http://ipecho.net/plain; echo"
 alias root="sudo su root; source ~/.zshrc"
 alias shishop="sudo su shishop; source ~/.zshrc"
 alias trimparquet="/Users/shishop/trimparquet/trim_parquet_env/bin/python /Users/shishop/trimparquet/trim.py"
#--------------
#   PATH
#--------------

 export PATH="/usr/local/opt/openssl/bin:$PATH"
 export LDFLAGS="-L/usr/local/opt/openssl/lib" echo export CPPFLAGS="-I/usr/local/opt/openssl/include"
 export LDFLAGS="-L/usr/local/opt/openssl/lib" echo export CPPFLAGS="-I/usr/local/opt/openssl/include"
 export PATH="/usr/local/opt/apr/bin:$PATH"
 export PATH="/usr/local/opt/apr-util/bin:$PATH"
 export PATH="/usr/local/opt/python/libexec/bin:$PATH"
 export PATH="/Users/shishop/Library/Python/3.7/bin:$PATH"
 export PATH="/usr/local/opt/grep/libexec/gnubin:$PATH"
 export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
 export JAVA_HOME=$(/usr/libexec/java_home)
 export SPARK_HOME="/usr/local/Cellar/apache-spark/3.0.1"
 export PATH="/Users/shishop/Library/Python/2.7/bin:$PATH" 

#------------
umask 000
#For compilers to find zlib you may need to set:
  export LDFLAGS="-L/usr/local/opt/zlib/lib"
  export CPPFLAGS="-I/usr/local/opt/zlib/include"

#For pkg-config to find zlib you may need to set:
  export PKG_CONFIG_PATH="/usr/local/opt/zlib/lib/pkgconfig"

#---


# Python-env block
#----------------

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi
#----------------


# Java-env block
#----------------
export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

eval "$(pyenv virtualenv-init -)"


export PATH="/usr/local/sbin:$PATH"
export PATH="/usr/local/sbin:$PATH"

# SOURCE COMMANDS :
#-----------------------
source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh
source $(brew --prefix)/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
export ZSH_HIGHLIGHT_HIGHLIGHTERS_DIR=$(brew --prefix)/share/zsh-syntax-highlighting/highlighters
source $(brew --prefix)/share/zsh-history-substring-search/zsh-history-substring-search.zsh